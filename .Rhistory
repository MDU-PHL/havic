q
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.05), size = 1)
q
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.1), size = 1)
q
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.2), size = 1)
q
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.15), size = 1)
q
p <- ggtree(tre) %<+% metadata
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.15), size = 1)
q
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=2, colnames_angle = 90, hjust = 0, offset = 0.02)
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=2, colnames_angle = 90, hjust = 0, offset = 0.03)
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=2, colnames_angle = 90, hjust = 0, offset = 0.04)
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.2), size = 1)
q
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=2, colnames_angle = 90, hjust = 0, offset = 0.04)
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.16), size = 1)
q
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=2, colnames_angle = 90, hjust = 0, offset = 0.04)
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=2, colnames_angle = 90, hjust = 0, offset = 0.045)
# hmap_data <- mapply(hmap_data, FUN=as.numeric)
head(hmap_data)
row.names(hmap_data) <- row.names(metadata)
head(hmap_data)
row.names(hmap_data) <- metadata$Isolate
warnings()
head(hmap_data)
hmap_data[hmap_data == "yes"] <- 1
hmap_data[hmap_data == "maybe"] <- 0.5
hmap_data[hmap_data == ""] <- 0
hmap_data <- data.matrix(hmap_data)
# hmap_data <- mapply(hmap_data, FUN=as.numeric)
head(hmap_data)
str(hmap_data)
summary(hmap_data)
rownames(hmap_data)
library(pheatmap)
pheatmap(hmap_data)
plot(tre)
str(metadata)
p <- ggtree(tre) %<+% metadata
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.16), size = 1)
q
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=2, colnames_angle = 90, hjust = 0, offset = 0.045)
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=2, colnames_angle = 90, hjust = 0, offset = 0.046)
pdf('/Users/mschultz/Desktop/MDU_DAMG/MDU/AMR_ongoing/imp4_plasmids/plasmid_plot_SSG_20190117_1.pdf')
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=2, colnames_angle = 90, hjust = 0, offset = 0.046)
dev.off()
gheatmap(t, calls_all, low="white", high="black", colnames_position = "top", font.size=2, color="black", colnames_angle = 90, hjust = 0) +ylim(0, 10)
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=2, colnames_angle = 90, hjust = 0, offset = 0.046) + ylim(0, 10)
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=2, colnames_angle = 90, hjust = 0, offset = 0.046, colnames_offset_y = 1)
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=1, colnames_angle = 90, hjust = 0, offset = 0.046, colnames_offset_y = 1)
pdf('/Users/mschultz/Desktop/MDU_DAMG/MDU/AMR_ongoing/imp4_plasmids/plasmid_plot_SSG_20190117_1.pdf')
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=1, colnames_angle = 90, hjust = 0, offset = 0.046, colnames_offset_y = 1)
dev.off()
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_reads_1, x = 0.16), size = 1)
q
pdf('/Users/mschultz/Desktop/MDU_DAMG/MDU/AMR_ongoing/imp4_plasmids/plasmid_plot_SSG_20190117_1.pdf')
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=1, colnames_angle = 90, hjust = 0, offset = 0.046, colnames_offset_y = 1)
dev.off()
pdf('/Users/mschultz/Desktop/MDU_DAMG/MDU/AMR_ongoing/imp4_plasmids/plasmid_plot_SSG_20190117_2.pdf')
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=1, colnames_angle = 90, hjust = 0, offset = 0.046, colnames_offset_y = 1)
dev.off()
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_contigs_1, x = 0.16), size = 1)
q
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_reads_1, x = 0.16), size = 1) +
geom_text2(aes(label = Sp_krkn_contigs_1, x = 0.17), size = 1) +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.18), size = 1) +
geom_text2(aes(label = MLST_ST, x = 0.19), size = 1) +
q
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_reads_1, x = 0.16), size = 1) +
geom_text2(aes(label = Sp_krkn_contigs_1, x = 0.17), size = 1) +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.18), size = 1) +
geom_text2(aes(label = MLST_ST, x = 0.19), size = 1) +
q
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_reads_1, x = 0.16), size = 1) +
geom_text2(aes(label = Sp_krkn_contigs_1, x = 0.17), size = 1) +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.18), size = 1) +
geom_text2(aes(label = MLST_ST, x = 0.19), size = 1)
q
geom_text2(aes(label = MLST_Scheme, x = 0.20), size = 1)
q
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=1, colnames_angle = 90, hjust = 0, offset = 0.046, colnames_offset_y = 1)
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_reads_1, x = 0.16), size = 1) +
geom_text2(aes(label = Sp_krkn_contigs_1, x = 0.17), size = 1) +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.18), size = 1) +
geom_text2(aes(label = MLST_ST, x = 0.19), size = 1)
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_reads_1, x = 0.16), size = 1) +
geom_text2(aes(label = Sp_krkn_contigs_1, x = 0.17), size = 1) +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.18), size = 1) +
geom_text2(aes(label = MLST_ST, x = 0.19), size = 1) +
geom_text2(aes(label = MLST_Scheme, x = 0.20), size = 1)
q
pdf('/Users/mschultz/Desktop/MDU_DAMG/MDU/AMR_ongoing/imp4_plasmids/plasmid_plot_SSG_20190117_4.pdf')
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=1, colnames_angle = 90, hjust = 0, offset = 0.046, colnames_offset_y = 1)
dev.off()
q <- p + geom_tiplab(align = TRUE, size = 1) +
geom_treescale() +
geom_text2(aes(label = Sp_krkn_reads_1, x = 0.16), size = 1) +
geom_text2(aes(label = Sp_krkn_contigs_1, x = 0.26), size = 1) +
geom_text2(aes(label = Sp_krkn_FinalCall, x = 0.36), size = 1) +
geom_text2(aes(label = MLST_ST, x = 0.46), size = 1) +
geom_text2(aes(label = MLST_Scheme, x = 0.56), size = 1)
q
pdf('/Users/mschultz/Desktop/MDU_DAMG/MDU/AMR_ongoing/imp4_plasmids/plasmid_plot_SSG_20190117_4.pdf')
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=1, colnames_angle = 90, hjust = 0, offset = 0.66, colnames_offset_y = 1)
dev.off()
pdf('/Users/mschultz/Desktop/MDU_DAMG/MDU/AMR_ongoing/imp4_plasmids/plasmid_plot_SSG_20190117_4.pdf', w = 50, h = 20)
gheatmap(q, hmap_data, high="black", low="white", , color="black", colnames_position = "top", font.size=1, colnames_angle = 90, hjust = 0, offset = 0.66, colnames_offset_y = 1)
dev.off()
library(rtracklayer)
library(GenomicFeatures)
library(Rsamtools)
library(GenomicAlignments)
library(VariantAnnotation)
library(genoPlotR)
library(ggbio)
library(genbankr)
# library(gggenes)
library(ape)
library(plotly)
metadata <- read.csv(file = "/Users/mschultz/Desktop/MDU_DAMG/DAMG/Arnfinn/genoplotr_vanB/selection_experiments/18-05-09 WGS_revertants_edit2.csv", header = TRUE, as.is = TRUE, check.names = FALSE)
fo_metadata <- subset.data.frame(metadata, ST == 17, drop = TRUE)
#fo_metadata <- subset.data.frame(fo_metadata, ST == 17, drop =  TRUE)
fo_metadata_split <- split(fo_metadata, fo_metadata$map)
ref_genome <- ape::read.dna('/Users/mschultz/Desktop/MDU_DAMG/DAMG/Arnfinn/genoplotr_vanB/selection_experiments/shovill_vanB_k15/snippy_bams/cp003351.fasta', format = "fasta", as.matrix = TRUE)
ref_genome_fullgenbank <- genbankr::readGenBank('/Users/mschultz/Desktop/MDU_DAMG/DAMG/Arnfinn/genoplotr_vanB/selection_experiments/shovill_vanB_k15/snippy_bams/AUS0004.gbk')
rnas <- as.data.frame(genbankr::otherFeatures(ref_genome_fullgenbank))
genes_ <- as.data.frame(genbankr::cds(ref_genome_fullgenbank))
rnas[setdiff(colnames(genes_), colnames(rnas))] <- NA
genes_[setdiff(colnames(rnas), colnames(genes_))] <- NA
ref_gbk <- rbind(rnas, genes_)
#ref_gbk <- ref_gbk[c("molecule", "gene", "start", "end", "product")]
ref_phage <- read.csv('/Users/mschultz/Desktop/MDU_DAMG/DAMG/Arnfinn/genoplotr_vanB/selection_experiments/shovill_vanB_k15/snippy_bams/phage.bed', sep = "\t", header = FALSE)
colnames(ref_phage) <- c("molecule", "start", "end")
ref_phage[setdiff(colnames(ref_gbk), colnames(ref_phage))] <- NA
ref_phage$gene <- "phage"
ref_phage$product <- "phage"
row.names(ref_gbk) <- NULL
ref_gbk
#image(ref_genome)
#methods(class = class(ref_genome[[1]]))
#length(ref_genome)
#
reflen <- length(ref_genome)
bias <- data.frame()
i <- 1
interval <- 1000
slide <- as.integer(interval/8)
while ((i + interval) < reflen) {
gc_df <- data.frame(start = i, end = (i + interval), content_type = 'GC', proportion = ape::GC.content(ref_genome[,i:(i + interval)]))
at_df <- data.frame(start = i, end = (i + interval), content_type = 'AT', proportion = 1 - (ape::GC.content(ref_genome[,i:(i + interval)])))
bias <- rbind(bias, gc_df)
bias <- rbind(bias, at_df)
i <- i + slide
}
tail(bias)
head(bias)
p <- ggplot() + ggplot2::geom_segment(data = bias, aes(x = start, xend = end, y = proportion, yend = proportion, color = content_type)) +
geom_line(data = bias, aes(x=start+((end-start)/2), y = proportion, color = content_type), size=0.1, alpha = 0.3) +
annotate("text", label = c("GC", "AT"), color = c("black", "#9ecae1"), x = 3e+06, y = c(0.4, 0.6)) +
scale_color_manual(values = c("black", "#9ecae1")) +
theme(legend.position = "none")
p
# dev.off()
library(ggrepel)
library(fastDummies)
tree_vve <- "(2018-03086:0.0000025817,(((((((2018-03087:0.0000010000,2018-07997:0.0000010000)83.9/92:0.0002647932,((2018-03093:0.0000021244,2018-07999:0.0002641474)87.5/90:0.0002648704,((2018-03107:0.0000025817,2018-08017:0.0000010000)0/49:0.0000020205,2018-08018:0.0002648301)88.2/81:0.0002648226)0/40:0.0000020470)93.1/91:0.0005286202,(2018-03097:0.0002648332,(2018-08009:0.0000021483,2018-08010:0.0000022134)0/64:0.0000021638)86.2/88:0.0002647746)0/7:0.0000020524,(((2018-03100:0.0000025817,2018-08001:0.0005275444)100/100:0.0128241336,Reference:0.0077151371)100/100:0.0058505035,(2018-03105:0.0000010000,2018-08002:0.0000010000)99.8/100:0.0023882308)73.3/70:0.0002574178)0/10:0.0000021865,(((2018-03102:0.0000025817,2018-08012:0.0000010000)0/57:0.0000020241,2018-08011:0.0007916455)100/100:0.0031702450,((2018-03103:0.0000025817,2018-08013:0.0002637125)0/64:0.0000027546,2018-08014:0.0007914514)97.5/99:0.0010553960)0/24:0.0000021112)89.3/91:0.0005275908,(2018-03091:0.0002646291,2018-07998:0.0000025817)94.2/97:0.0007914371)91.6/96:0.0007912126,2018-07996:0.0002645234)0/41:0.0000020571,(2018-03094:0.0000010000,((2018-03104:0.0000022172,2018-08016:0.0002636115)78.5/80:0.0002641442,(2018-08000:0.0000011247,2018-08015:0.0002635888)29.9/50:0.0002636071)0/52:0.0000020515)0/3:0.0000023462);"
library(ggtree)
library(ape)
tre <- ape::read.tree(text = tree_vve)
tre <- ape::root.phylo(tre, node = 46)
ape::plot.phylo(tre)
nodelabels()
q <- ggtree(tre) %<+% fo_metadata
rowstolabel <- which(q$data$isTip == FALSE)
q$data$support <-   c(rep("", nrow(q$data) - length(rowstolabel)), q$data[rowstolabel, 'label'])
xyz <-
??seq
s <- q + geom_tiplab(align = TRUE, aes(color = Stage)) + xlim_tree(.015) + geom_text_repel(aes(label=support), nudge_x = -0.0005, nudge_y = 0.9) + theme(legend.position = 'right')#  geom_text2(aes(subset = !isTip, label=label))
s
calls_all <- data.frame(isolate = NA)
for (n in 1:length(names(fo_metadata_split))) {
slot <- fo_metadata_split[n][[1]]
# print(slot)
row.names(slot) <- slot$category
vcf <- readVcf(paste('/Users/mschultz/Desktop/MDU_DAMG/DAMG/Arnfinn/genoplotr_vanB/selection_experiments/shovill_vanB_k15/snippy_bams/pairwise_', slot['REF', 'MDU-ID_original'], '_v_', slot['ALT', 'MDU-ID_original'], '.vcf', sep = "", collapse = ""))
calls <- geno(vcf)$GT
# colnames(calls)
calls <- calls[which(calls[,1] != calls[,2]),, drop=FALSE]
calls <- as.data.frame(calls)
calls$pos <- NA
calls$isolate <- NULL
for (i in 1:nrow(calls)) {
calls[i, 'pos'] <- as.numeric(strsplit(strsplit(rownames(calls)[i], ':')[[1]][2], '_')[[1]][1])
calls[i, 'isolate'] <- slot['ALT', 'MDU-ID_original']
}
for (k in 1:nrow(calls)){
hit <- ref_gbk[with(ref_gbk, start <= calls[k, 'pos'] & end >= calls[k, 'pos']),]
# print(length(hit$product) > 0)
if (length(hit$product) > 0 ) {
calls[k, 'product'] <- paste(hit$product, ", ", calls[k, 'pos'], sep = "", collapse = "")
}
else {
calls[k, 'product'] <- paste('unknown function, position ', calls[k, 'pos'], sep = "", collapse = "")
}
}
calls <- calls[,c('isolate', 'product')]
mini_df <- as.data.frame(table(calls) != 0)
mini_df <- cbind(isolate = rownames(mini_df), data.frame(mini_df, row.names = NULL))
# mini_df <- mini_df[, c(colnames(mini_df), setdiff(colnames(mini_df), ))]
# if (length(colnames(calls_all)) > 0) {
mini_df[setdiff(colnames(calls_all), colnames(mini_df))] <- NA
diffs <- setdiff(colnames(mini_df), colnames(calls_all))
if (length(diffs) > 0) {
calls_all[c(diffs)] <- NA
}
#mini_df[setdiff(colnames(mini_df), colnames(calls_all))] <- NA
# }
calls_all <- rbind(calls_all, mini_df)
}
calls_all[is.na(calls_all)] <- 0
calls_all <- calls_all[-which(calls_all$isolate == 0),]
row.names(calls_all) <- calls_all$isolate
calls_all <- calls_all[which(colnames(calls_all) != 'isolate')]
library(pheatmap)
pheatmap(as.matrix(calls_all), cluster_cols = FALSE)
library(ggtree)
t <- s +
geom_taxalink('2018-03086', '2018-07996', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-06446', '2018-08020', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-06448', '2018-08021', color='orange', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-06448', '2018-08022', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03087', '2018-07997', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03091', '2018-07998', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03093', '2018-07999', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03094', '2018-08000', color='orange', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03095', '2018-08007', color='orange', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03095', '2018-08008', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03097', '2018-08009', color='orange', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03097', '2018-08010', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03100', '2018-08001', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03102', '2018-08011', color='orange', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03102', '2018-08012', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03103', '2018-08013', color='orange', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03103', '2018-08014', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03104', '2018-08015', color='orange', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03104', '2018-08016', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03105', '2018-08002', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03107', '2018-08017', color='orange', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-03107', '2018-08018', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-06440', '2018-08003', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-06442', '2018-08004', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-06444', '2018-08005', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-06445', '2018-08006', color='red', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open')) +
geom_taxalink('2018-06446', '2018-08019', color='orange', arrow=grid::arrow(length=grid::unit(0.02, "npc"), type='open'))
t
library(ggstance)
#str(q$data)
MICs2 <- subset(fo_metadata, select = c('MDU-ID_original', 'MIC', 'Stage'))
names(MICs2) <- c('id', 'value', 'stage')
names(MICs2)[3]
pdf(file = "/Users/mschultz/Desktop/MDU_DAMG/DAMG/Arnfinn/genoplotr_vanB/selection_experiments/SelectionExperimentsVsMIC.pdf")
facet_plot(t, panel = 'MIC', data = MICs2, geom = geom_barh, aes(x = value, fill = stage), stat = 'identity') + theme_tree2()
dev.off()
??facet_plot
q$data
s$data
pdf(file = "/Users/mschultz/Desktop/MDU_DAMG/DAMG/Arnfinn/genoplotr_vanB/selection_experiments/SelectionExperimentsVsMutations.pdf")
gheatmap(t, calls_all, low="white", high="black", colnames_position = "top", font.size=2, color="black", colnames_angle = 90, hjust = 0)
dev.off()#
install.packages(pandoc-citeproc)
install.packages('pandoc-citeproc')
rm(list = ls())
quit()
BiocManager::install('tidyverse')
BiocManager::install('pheatmap')
#draft <- read_excel("D:/Dropbox (Dragonfly)/DIV7/Maja and Kade/MooKsiDooKs/School 12/Extension Science/Class/draft.xlsx")
draft <- read_excel('/Users/mschultz/Downloads/draft.xlsx')
install.packages('readxl')
library(readxl)
#draft <- read_excel("D:/Dropbox (Dragonfly)/DIV7/Maja and Kade/MooKsiDooKs/School 12/Extension Science/Class/draft.xlsx")
draft <- read_excel('/Users/mschultz/Downloads/draft.xlsx')
draft2 <- na.omit(draft)
str(draft2)
draft2[3,"Specie"] <- "BAser2"
draft2[6,"Specie"] <- "PIund2"
row.names(draft2) <- draft2$Specie
draft3 <- draft2[,c(2:ncol(draft2))]
draft3 <- as.matrix(draft3)
results <- prcomp(draft3)
names(results$x)
results$x$PC1
plot(results)
draft2 <- na.omit(draft)
str(draft2)
draft2[3,"Specie"] <- "BAser2"
draft2[6,"Specie"] <- "PIund2"
row.names(draft2) <- draft2$Specie
draft3 <- draft2[,c(2:ncol(draft2))]
draft3
draft3 <- as.matrix(draft3)
results <- prcomp(draft3)
results
pca_out <- results$x
pca_out
class(pca_out)
dim(pca_out)
pca_out <- as.matrix(results$x)
pca_out
class(pca_out)
dim(pca_out)
plot(pca_out$PC1)
plot(pca_out[,1], pca_out[,2])
pca_out <- as.matrix(results$rotation)
pca_out
class(pca_out)
dim(pca_out)
plot(pca_out[,1], pca_out[,2], )
plot(pca_out[,1], pca_out[,2], pch=row.names(pca_out))
plot(pca_out[,1], pca_out[,2], labels=row.names(pca_out))
library(ggplot2)
library(ggplot2)
p <- ggplot() + geom_point(data = pca_out, aes(x=PC1, y=PC2, label=row.names(pca_out)))
results <- prcomp(draft3)
# pca_out <- as.matrix(results$rotation)
pca_out < results$rotation
# class(pca_out)
# dim(pca_out)
library(ggplot2)
p <- ggplot() + geom_point(data = pca_out, aes(x=PC1, y=PC2, label=row.names(pca_out)))
draft3 <- draft2[,c(2:ncol(draft2))]
draft3 <- as.matrix(draft3)
results <- prcomp(draft3)
# pca_out <- as.matrix(results$rotation)
pca_out < results$rotation
library(readxl)
#draft <- read_excel("D:/Dropbox (Dragonfly)/DIV7/Maja and Kade/MooKsiDooKs/School 12/Extension Science/Class/draft.xlsx")
draft <- read_excel('/Users/mschultz/Downloads/draft.xlsx')
draft2 <- na.omit(draft)
str(draft2)
draft2[3,"Specie"] <- "BAser2"
draft2[6,"Specie"] <- "PIund2"
row.names(draft2) <- draft2$Specie
draft3 <- draft2[,c(2:ncol(draft2))]
draft3 <- as.matrix(draft3)
results <- prcomp(draft3)
# pca_out <- as.matrix(results$rotation)
pca_out < results$rotation
draft3
draft3 <- as.matrix(draft3)
results
# pca_out <- as.matrix(results$rotation)
pca_out <- results$rotation
pca_out
# class(pca_out)
# dim(pca_out)
library(ggplot2)
p <- ggplot() + geom_point(data = pca_out, aes(x=PC1, y=PC2, label=row.names(pca_out)))
p <- ggplot() + geom_point(data = pca_out, aes(x=PC1, y=PC2))
p <- ggplot() + geom_point(data = pca_out)#, aes(x=PC1, y=PC2))
# pca_out <- as.matrix(results$rotation)
pca_out <- data.frame(results$rotation)
# class(pca_out)
# dim(pca_out)
library(ggplot2)
p <- ggplot() + geom_point(data = pca_out)#, aes(x=PC1, y=PC2))
p
p <- ggplot() + geom_point(data = pca_out, aes(x=PC1, y=PC2))
plot(pca_out[,1], pca_out[,2], labels=row.names(pca_out))
p <- ggplot() + geom_point(data = pca_out, aes(x=PC1, y=PC2))
p
names(pca_out)
str(pca_out)
pca_out
row.names(pca_out)
p <- ggplot() + geom_point(data = pca_out, aes(x=PC1, y=PC2, labels=row.names(pca_out)))
p
p <- ggplot() + geom_point(data = pca_out, aes(x=PC1, y=PC2)) + geom_label(row.names(pca_out))
p <- ggplot(pca_out, aes(x=PC1, y=PC2)) + geom_point() + geom_label()
p
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv", sep = ",")
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv", sep = ",")
nba
library(readxl)
#draft <- read_excel("D:/Dropbox (Dragonfly)/DIV7/Maja and Kade/MooKsiDooKs/School 12/Extension Science/Class/draft.xlsx")
draft <- read_excel('/Users/mschultz/Downloads/draft.xlsx')
draft2 <- na.omit(draft)
str(draft2)
draft2[3,"Specie"] <- "BAser2"
draft2[6,"Specie"] <- "PIund2"
#row.names(draft2) <- draft2$Specie
results <- prcomp(as.matrix(draft2[,c(2:ncol(draft2))]))
# draft3 <- as.matrix(draft3)
# results <- prcomp(draft3)
# pca_out <- as.matrix(results$rotation)
pca_out <- data.frame(results$rotation)
# draft3 <- as.matrix(draft3)
# results <- prcomp(draft3)
# pca_out <- as.matrix(results$rotation)
pca_out <- data.frame(results$rotation)
# draft3 <- as.matrix(draft3)
# results <- prcomp(draft3)
# pca_out <- as.matrix(results$rotation)
pca_out <- data.frame(results$rotation)
names(pca_out) <- row.names(pca_out)
pca_out
# draft3 <- as.matrix(draft3)
# results <- prcomp(draft3)
# pca_out <- as.matrix(results$rotation)
pca_out <- data.frame(results$rotation)
pca_out$Names <- row.names(pca_out)
pca_out
# row.names(pca_out) <-
# class(pca_out)
# dim(pca_out)
library(ggplot2)
p <- ggplot(pca_out, aes(x=PC1, y=PC2)) + geom_point() + geom_label()
p
p <- ggplot(pca_out, aes(x=PC1, y=PC2)) + geom_point() + geom_label(Names)
p
p <- ggplot(pca_out, aes(x=PC1, y=PC2)) + geom_point() + geom_label(aes(label=Names))
p
library(ggrepel)
p <- ggplot(pca_out, aes(x=PC1, y=PC2)) + geom_point() + geom_label_repel(aes(label=Names))
p
p <- ggplot(pca_out, aes(x=PC1, y=PC2)) + geom_point() + geom_label_repel(aes(label=Names)) +
theme_classic()
p
# draft3 <- as.matrix(draft3)
# results <- prcomp(draft3)
# pca_out <- as.matrix(results$rotation)
screeplot(results)
p1p2 <- ggplot(pca_out, aes(x=PC1, y=PC2)) + geom_point() + geom_label_repel(aes(label=Names)) +
theme_classic()
p2p3 <- ggplot(pca_out, aes(x=PC2, y=PC3)) + geom_point() + geom_label_repel(aes(label=Names)) +
theme_classic()
print(p1p2)
print(p2p3)
plot(draft2$`Time to reach original temperature (min)`, draft2$`Max Temperature (°C)`)
library(ggpairs)
install.packages(ggpairs)
install.packages('ggpairs')
library(ggpairs)
BiocManager::install("ggpairs")
BiocManager::install("ggpairs")
pairs(draft2)
library(readxl)
#draft <- read_excel("D:/Dropbox (Dragonfly)/DIV7/Maja and Kade/MooKsiDooKs/School 12/Extension Science/Class/draft.xlsx")
draft <- read_excel('/Users/mschultz/Downloads/draft.xlsx')
draft2 <- na.omit(draft)
str(draft2)
draft2[3,"Specie"] <- "BAser2"
draft2[6,"Specie"] <- "PIund2"
#row.names(draft2) <- draft2$Specie
results <- prcomp(as.matrix(draft2[,c(2:ncol(draft2))]))
pairs(pca_out)
pairs(pca_out[,c(2:)])
pairs(pca_out[,c(2:ncol(pca_out))])
pca_out[,c(2:ncol(pca_out))]
pairs(pca_out[,c(1:ncol(pca_out)-1)])
draft2
pairs(draft2)
pairs(draft2[,c(2:ncol(draft2))])
64:276: unexpected input
64: l = "ML IQtree with bootstrap %, tips cluster-picked (left); fasta alignment (right)", subtitle = paste0('Clusters (coloured tips) have been picked as clades with >= ', supportvals, '% support
source('/Users/mschultz/havic/havic_test_results/HAV_all_minimap2.stack.trimmed.fa.Rplot.R')
setwd('/Users/mschultz/havic/havic_test_results/')
list
source('/Users/mschultz/havic/havic_test_results/HAV_all_minimap2.stack.trimmed.fa.Rplot.R')
getwd()
setwd('/Users/mschultz/havic/')
source('/Users/mschultz/havic/havic_test_results/HAV_all_minimap2.stack.trimmed.fa.Rplot.R')
source('/Users/mschultz/havic/havic_test_results/HAV_all_minimap2.stack.trimmed.fa.Rplot.R')
source('/Users/mschultz/havic/havic_test_results/HAV_all_minimap2.stack.trimmed.fa.Rplot.R')
source('/Users/mschultz/havic/havic_test_results/HAV_all_minimap2.stack.trimmed.fa.Rplot.R')
source('/Users/mschultz/havic/havic_test_results/HAV_all_minimap2.stack.trimmed.fa.Rplot.R')
library(circlize)
install.packages('circlize')
library(circlize)
