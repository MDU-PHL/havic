
R version 3.4.2 (2017-09-28) -- "Short Summer"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin16.7.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> library(phytools)
Loading required package: ape
Loading required package: maps
> library(plotly)
Loading required package: ggplot2

Attaching package: ‘plotly’

The following object is masked from ‘package:ggplot2’:

    last_plot

The following object is masked from ‘package:stats’:

    filter

The following object is masked from ‘package:graphics’:

    layout

> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ──
✔ tibble  1.3.4     ✔ purrr   0.2.4
✔ tidyr   0.7.2     ✔ dplyr   0.7.4
✔ readr   1.1.1     ✔ stringr 1.2.0
✔ tibble  1.3.4     ✔ forcats 0.2.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks plotly::filter(), stats::filter()
✖ dplyr::lag()    masks stats::lag()
✖ purrr::map()    masks maps::map()
> library(ggtree)
Loading required package: treeio

Attaching package: ‘treeio’

The following object is masked from ‘package:phytools’:

    read.newick

The following objects are masked from ‘package:ape’:

    drop.tip, Nnode, Ntip

ggtree v1.10.0  For help: https://guangchuangyu.github.io/ggtree

If you use ggtree in published research, please cite:
Guangchuang Yu, David Smith, Huachen Zhu, Yi Guan, Tommy Tsan-Yuk Lam. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution 2017, 8(1):28-36, doi:10.1111/2041-210X.12628

Attaching package: ‘ggtree’

The following object is masked from ‘package:dplyr’:

    collapse

The following object is masked from ‘package:tidyr’:

    expand

The following object is masked from ‘package:phytools’:

    reroot

The following object is masked from ‘package:ape’:

    rotate

> 
> basename <- "/Users/mschultz/Desktop/MDU_DAMG/MDU/HAVNET/HAVIC/tmphIVnVRy/_test_HAV_all_minimap2.stack.trimmed.fa"
> print(paste0('basename: ', basename))
[1] "basename: /Users/mschultz/Desktop/MDU_DAMG/MDU/HAVNET/HAVIC/tmphIVnVRy/_test_HAV_all_minimap2.stack.trimmed.fa"
> nsnps <- 3
> seqlen <- 300
> kmer <- 5
> tree <- read.newick(file=paste0(basename, '.mp.treefile'))
> tree_clust <- read.newick(file=paste0(basename, '.mp_clusterPicks.nwk'))
> cluster_picks <- matrix(nrow = 0, ncol = 2)
> colnames(cluster_picks) <- c('Isolate', 'Cluster')
> cluster_picks
     Isolate Cluster
> 
> for(tip in tree_clust$tip.label[grep('Clust', tree_clust$tip.label)]){
+     outp_list_of_lists <- strsplit(tip, split = '_')
+     output_list <- outp_list_of_lists[[1]]
+     cluster_picks <- rbind(cluster_picks, c(paste0(output_list[2:length(output_list)], collapse='_'), output_list[1]))
+     }
> 
> cluster_picks <- data.frame(cluster_picks, stringsAsFactors=FALSE)
> cluster_picks
                           Isolate Cluster
1                       CamjhjGUXd  Clust3
2                       IfccnMzhWZ  Clust3
3  zpnhTQnZHM_reverse_complemented  Clust3
4                       KBfVmEuNhT  Clust3
5                       zpnhTQnZHM  Clust3
6                       iBWuYTvGYP  Clust3
7                       XlpmxLFHEo  Clust3
8                       oOjfySHejg  Clust3
9                       rWwDfVIeRT  Clust3
10                      iDdfsIPoFC  Clust3
11                      RBpIkeZqmE  Clust3
12                      MJTbLeTDIL  Clust3
13                      GrHHiDYcqP  Clust3
14                      dZCEqyUYmi  Clust3
15                      BliOsbLPPQ  Clust3
16                      esPBejbKur  Clust3
17                      fVgbFXPvHT  Clust3
18                      FFJCbDghcz  Clust3
19      HIUOUhyuie_5primeSimulated  Clust3
20                      aJrTjuQeHf  Clust3
21                      EAEAqkoVEk  Clust3
22                      UgoxidomWm  Clust3
23                      cQXHZzsIVK  Clust3
24                      EzXwzDyjSJ  Clust3
25                      BWrCVSofvW  Clust3
26                      AjIgzYvISn  Clust3
27                      avlKdTOYSi  Clust3
28                      aeMmYoZCCw  Clust3
29                      MFIdMzZSAS  Clust3
30                      usHOecXenz  Clust3
31                      cWiNpperYg  Clust3
32                      qDpdFEktFk  Clust3
33                      OiyxRrzPeU  Clust3
34                      eXtNXWTOhY  Clust3
35                      sohQbPXsQf  Clust3
36                      ycangsOXEz  Clust3
37                      nDNLdjthnv  Clust3
38      HCuyqxcQQz_5primeSimulated  Clust3
39                      cQinUZImKe  Clust4
40      NC_001489_1_ampliconseq_IB  Clust4
41                      McVQAWNAGl  Clust1
42                      zWAssKkmQI  Clust1
43                      QfslVlgOxR  Clust2
44                      ZGnNCydOHQ  Clust2
45                      CCHkiFhcxG  Clust5
46                      PAvYXhYkLM  Clust5
> 
> 
> list_of_clusters <- split(cluster_picks$Isolate, cluster_picks$Cluster)
> 
> plt <- ggtree(tree, size=0.1) %<+% cluster_picks
> offst <- 0.4401 *max(dist.nodes(tree))+-0.4526
> if(offst <= 0){
+     offst <- 0.1
+ }
> fntsz <- -0.005093*length(tree$tip.label)+1.955556
> if(fntsz < 0.5) {
+     fntsz <- 0.5
+     }
> print(paste('FontSize for plot', fntsz))
[1] "FontSize for plot 1.532837"
> 
> wdth <- 1
> library('qualpalr')
> #see https://cran.r-project.org/web/packages/qualpalr/README.html
> ncolours <- length(names(list_of_clusters))
> if(length(names(list_of_clusters)) < 2){
+     ncolours <- 2
+     }
> pal <- qualpal(n = ncolours, list(h = c(0, 360), s = c(0.5, 1), l = c(0.4, 0.4)))
> #plot(pal)
> #rownames(pal$HSL)
> q <- plt + geom_tiplab(aes(label=label, color=Cluster), size=fntsz, linesize=0.1, align=TRUE) +
+     # theme(legend.position = "right") +
+     geom_tippoint(aes(color=Cluster), size=fntsz, na.rm=T) +
+     geom_text2(aes(x=branch, label=as.integer(label), vjust=-0.3, hjust=1, subset=(isTip!=TRUE & as.integer(label)>=70), na.rm=TRUE), size=fntsz, na.rm=TRUE) +
+     geom_treescale(x=0.01, y =-2, offset=1, fontsize = fntsz, linesize=0.1) +
+     annotate("text", x = 0.015, y=-4, label = "Substitutions per site", size=fntsz) +
+     ggtitle(label = "ML IQtree with bootstrap %, tips cluster-picked (left); fasta alignment (right)", subtitle = paste0('Clusters (coloured tips) have been picked as clades with >=95% support and divergence <= ', nsnps/seqlen*100, '%', '(i.e., <= ', nsnps, ' SNPs in ', seqlen, ' bp)')) +
+     scale_colour_manual(values=rownames(pal$HSL), na.value = "black")
Warning message:
The plyr::rename operation has created duplicates for the following name(s): (`size`) 
> #q
> pdf(file=paste0(basename, '.mp.treefile.', 'div_', nsnps, 'SNPsIn', seqlen, 'bp_msa.pdf'), paper = 'a4r', width=11.69, height=8.27)
> 
> h <- msaplot(p=q, fasta=basename, offset = offst, width = wdth, bg_line = FALSE, color=c('#f7fcfd', #white
+                                                                                     '#ef3b2c', #red
+                                                                                     '#41ab5d', #green
+                                                                                     '#ffffbf', #yellow
+                                                                                     '#4292c6', #blue
+                                                                                     '#dface5',
+                                                                                     '#c699cc',
+                                                                                     '#ad86b2',
+                                                                                     '#947399',
+                                                                                     '#7c607f',
+                                                                                     '#634c66',
+                                                                                     '#4a394c',
+                                                                                     '#312633',
+                                                                                     '#181319',
+                                                                                     '#000000',
+                                                                                     '#f8c0ff'))
Loading required package: Biostrings
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:dplyr’:

    combine, intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, cbind, colMeans, colnames,
    colSums, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, lengths, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rowMeans, rownames, rowSums, sapply, setdiff, sort,
    table, tapply, union, unique, unsplit, which, which.max, which.min

Loading required package: S4Vectors
Loading required package: stats4

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:ggtree’:

    expand

The following objects are masked from ‘package:dplyr’:

    first, rename

The following object is masked from ‘package:tidyr’:

    expand

The following object is masked from ‘package:plotly’:

    rename

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges

Attaching package: ‘IRanges’

The following object is masked from ‘package:ggtree’:

    collapse

The following objects are masked from ‘package:dplyr’:

    collapse, desc, slice

The following object is masked from ‘package:purrr’:

    reduce

The following object is masked from ‘package:plotly’:

    slice

Loading required package: XVector

Attaching package: ‘XVector’

The following object is masked from ‘package:purrr’:

    compact


Attaching package: ‘Biostrings’

The following object is masked from ‘package:treeio’:

    mask

The following object is masked from ‘package:ape’:

    complement

The following object is masked from ‘package:base’:

    strsplit

Warning: Ignoring unknown aesthetics: x, y
> h
Warning messages:
1: In fun(x, ...) : NAs introduced by coercion
2: In fun(x, ...) : NAs introduced by coercion
3: In FUN(X[[i]], ...) : NAs introduced by coercion
4: In FUN(X[[i]], ...) : NAs introduced by coercion
> dev.off()
null device 
          1 
> 
> 
> library(pheatmap)
> 
> aln <- read.dna(basename, format = 'fasta', as.character = TRUE)
> snp_dists <- function(alignment, exclude_char){
+     mat <- matrix(0, nrow = nrow(alignment), ncol = nrow(alignment))
+     colnames(mat) <- rownames(alignment)
+     rownames(mat) <- rownames(alignment)
+     mat_snps <- mat
+     pw_dist <- function(Aln_sub){
+         len_aln <- Aln_sub[, c(which(!(Aln_sub[1,] %in% exclude_char) & !(Aln_sub[2,] %in% exclude_char))), drop=FALSE]
+         n_snps <- len_aln[, c(which(len_aln[1,]!=len_aln[2,])), drop=FALSE]
+         return(c(paste0('=', ncol(n_snps), '/', ncol(len_aln)), ncol(n_snps)))
+     }
+     for(i in 1:nrow(alignment)){
+         for(j in i:nrow(alignment)){
+             seq1 <- rownames(alignment)[i]
+             seq2 <- rownames(alignment)[j]
+             val <- pw_dist(alignment[c(i,j), , drop=FALSE])
+             mat[seq1, seq2] <- val[1]
+             mat[seq2, seq1] <- val[1]
+             mat_snps[seq1, seq2] = as.numeric(val[2])
+             mat_snps[seq2, seq1] = as.numeric(val[2])
+             }
+         }
+     return(list(mat, mat_snps))
+ }
> 
> exclusions <- tolower(c(names(IUPAC_CODE_MAP)[!(names(IUPAC_CODE_MAP) %in% c('A', 'C', 'T', 'G'))], '-', '?'))
> 
> #Returns two matrices
> snps <- snp_dists(aln, exclusions)
> heatmap_data <- snps[[2]]
> 
> 
> pheatmap(heatmap_data,
+          show_rownames = T,
+          show_colnames = T,
+          display_numbers = TRUE,
+          number_format = '%.0f',
+          fontsize = fntsz*2,
+          filename = paste0(basename,
+                            '_SNPdists.pdf'),
+          width=11.69,
+          height=8.27)
> dev.off()
null device 
          1 
> write.csv(x=heatmap_data, file=paste0(basename,
+                                       '_SNPdists.csv'),
+           quote=FALSE)
> 
> write.csv(snps[[1]], file=paste0(basename,
+                                  '_SNPcountsOverAlignLength.csv'),
+           quote = FALSE)
> 
> proc.time()
   user  system elapsed 
  9.828   0.450  10.477 
